version: '3.8'

services:
  mysql:
    image: swarm/mysql_custom:1.0
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./mysql_data:/var/lib/mysql
    networks:
      - pets-location-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  pets-location_service:
    image: swarm/pet-location_service:1.0
    ports:
      - 9090:9090
    environment:
      spring.datasource.url: jdbc:mysql://mysql:${MYSQL_PORT}/${MYSQL_DATABASE}
      spring.datasource.username: ${MYSQL_USER}
      spring.datasource.password: ${MYSQL_ROOT_PASSWORD}
      spring.mail.username: ${MAIL_USERNAME}
      spring.mail.password: ${MAIL_PASSWORD}
      #spring.mail.host: mailhog
      #spring.mail.port: 1025
      #spring.redis.host: redis
      #spring.redis.port: 6379
    depends_on:
      - mysql
      - mailhog
      - redis
    networks:
      - pets-location-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
  
  cdn-files_service:
    image: swarm/cdn-files_service:1.0
    ports:
      - 9000:9000
    networks:
      - pets-location-network
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure

  mailhog:
    image: swarm/mailhog_custom:1.0
    ports:
      - 8025:8025
    networks:
      - pets-location-network
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  redis:
    image: swarm/redis_custom:1.0
    networks:
      - pets-location-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

volumes:
  mysql_data:

networks:
  pets-location-network:
    driver: overlay