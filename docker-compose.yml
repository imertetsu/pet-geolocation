version: '3.3'

services:
  mysql:
    image: swarm/mysql_custom:1.0
    build: 
      context: .
      dockerfile: Dockerfile.mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - 3306:3306
    volumes:
      - ./mysql_data:/var/lib/mysql
    networks:
      - pets-location-network
    restart: unless-stopped

  pets-location_service:
    image: swarm/pet-location_service:1.0
    build:
      context: .
      dockerfile: Dockerfile.pets
    ports:
      - 9090:9090
    environment:
      - spring.datasource.url=jdbc:mysql://mysql:${MYSQL_PORT}/${MYSQL_DATABASE}
      - spring.datasource.username=${MYSQL_USER}
      - spring.datasource.password=${MYSQL_ROOT_PASSWORD}
      - spring.mail.username=${MAIL_USERNAME}
      - spring.mail.password=${MAIL_PASSWORD}
    depends_on:
      - mysql
      - mailhog
      - redis
    networks:
      - pets-location-network
    restart: unless-stopped
  
  cdn-files_service:
    image: swarm/cdn-files_service:1.0
    build: 
      context: .
      dockerfile: Dockerfile.cdn
    ports:
      - 9000:9000
    networks:
      - pets-location-network
    restart: unless-stopped

  mailhog:
    image: swarm/mailhog_custom:1.0
    build:
      context: .
      dockerfile: Dockerfile.mailhog
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - pets-location-network
    restart: unless-stopped

  redis:
    image: swarm/redis_custom:1.0
    build:
      context: .
      dockerfile: Dockerfile.redis
    ports:
      - 6379:6379
    networks:
      - pets-location-network
    restart: unless-stopped

networks:
  pets-location-network:
    driver: bridge
